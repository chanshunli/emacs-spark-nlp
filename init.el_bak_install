(require 'package)

;; 当项目没有解决思路的时候可以做的三件事情:
;; 1. 做容易的先,高阶化描述简单过程: 像兰切一样快速吃饱自己,而不是过早的完美主义卡死大脑流
;; 2. 抽象出来可以复用的库: 复用^2 = 复利
;; 3. Emacs配置,自我设计工具: 磨刀不误砍柴工

(setq package-archives
      '(("gnu"   . "http://1.15.88.122/gnu/")
        ("melpa" . "http://1.15.88.122/melpa/")
        ("melpa-stable" . "http://1.15.88.122/stable-melpa/")))

;;helm
;;helm-projectile
;; M 是格式化多行, O变成一行, m选中表达式
(setq package-selected-packages
      '(ivy
        cider
        clojure-mode
        smartparens
        projectile
        company
        ag
        counsel-projectile
        monokai-theme
        lispy
        multiple-cursors
        easy-kill
        yasnippet
        company-posframe
        clj-refactor
        magit
        neotree
        multi-term
        exec-path-from-shell
        vterm
        doom-themes
        use-package
        dash
        wgrep
        wgrep-ag
        request
        ripgrep
        esup
        company-tabnine
        emmet-mode
        markdown-mode
        prescient
        ivy-prescient
        clomacs
        s
        web-mode
        intero
        haskell-mode
        swift-mode
        racket-mode))

(package-initialize)

(unless package-archive-contents
  (package-refresh-contents))

(dolist (package package-selected-packages)
  (when (and (assq package package-archive-contents)
             (not (package-installed-p package)))
    (package-install package t)))

;; my setting
;;(load-theme 'doom-molokai t)
